/* Define color variables for light mode (default) */
:root {
    --bg-color: #f4f4f4;
    --text-color: #333;
    --heading-color: #333;
    --secondary-text-color: #555;
    --container-bg-color: #ffffff;
    --container-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    --button-bg-color: #e9e9e9;
    --button-hover-bg-color: #dcdcdc;
    --button-active-bg-color: #c9c9c9;
    --button-border-color: #ccc;
    --button-text-color: #333;
    --play-button-bg-color: #28a745;
    --play-button-hover-bg-color: #218838;
    --play-button-disabled-bg-color: #cccccc;
    --play-button-text-color: #ffffff;
    --slider-value-color: #007bff;
    --input-bg-color: #ffffff;
    --input-border-color: #ccc;
    --input-text-color: #333;
    --toggle-bg-color: #ccc;
    --toggle-slider-color: #fff;
    --toggle-checked-bg-color: #007bff; /* Blue for checked state */
}

/* Define color variables for dark mode */
body.dark-mode {
    --bg-color: #1a1a1a; /* Dark background */
    --text-color: #e0e0e0; /* Light text */
    --heading-color: #ffffff; /* White headings */
    --secondary-text-color: #aaaaaa; /* Lighter secondary text */
    --container-bg-color: #2c2c2c; /* Darker container background */
    --container-shadow: 0 2px 8px rgba(0, 0, 0, 0.4); /* Stronger shadow */
    --button-bg-color: #4a4a4a; /* Darker buttons */
    --button-hover-bg-color: #5a5a5a;
    --button-active-bg-color: #6a6a6a;
    --button-border-color: #555;
    --button-text-color: #e0e0e0; /* Light text on buttons */
    --play-button-bg-color: #34a853; /* Slightly adjusted green */
    --play-button-hover-bg-color: #2c8a4a;
    --play-button-disabled-bg-color: #555555;
    --play-button-text-color: #ffffff;
    --slider-value-color: #4dabf7; /* Lighter blue for values */
    --input-bg-color: #3a3a3a; /* Dark input fields */
    --input-border-color: #555;
    --input-text-color: #e0e0e0; /* Light text in inputs */
    --toggle-bg-color: #555;
    --toggle-slider-color: #ccc;
    --toggle-checked-bg-color: #4dabf7; /* Use the lighter blue */
}

/* Apply variables to elements */
body {
    font-family: sans-serif;
    text-align: center;
    background-color: var(--bg-color);
    color: var(--text-color); /* Apply base text color */
    padding: 20px;
    transition: background-color 0.3s ease, color 0.3s ease; /* Smooth transition */
}

.header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 900px; /* Adjust as needed */
    margin: 0 auto 10px auto;
    flex-wrap: wrap; /* Allow wrapping on small screens */
}

h1 {
    color: var(--heading-color);
    margin: 0; /* Remove default margin if needed */
    text-align: left; /* Align heading left */
    flex-grow: 1; /* Allow heading to take space */
}

h2 {
    margin-top: 30px;
    color: var(--secondary-text-color); /* Use secondary text color for H2 */
}

p {
    color: var(--text-color); /* Ensure paragraphs use text color */
}

em {
    color: var(--secondary-text-color); /* Style emphasis text */
}


/* Settings Styles */
.settings-container,
.text-input-container,
.button-container {
    background-color: var(--container-bg-color);
    padding: 20px 25px;
    border-radius: 8px;
    box-shadow: var(--container-shadow);
    max-width: 600px; /* Consistent max-width? */
    margin: 30px auto;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
}
/* Adjust button container width */
.button-container {
    max-width: 800px;
}


.settings-container h2,
.text-input-container h2,
.button-container h2 {
    text-align: center;
    margin-top: 0;
    margin-bottom: 20px;
    color: var(--secondary-text-color);
}

.setting {
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    gap: 15px;
}

.setting label {
    min-width: 100px;
    font-weight: bold;
    color: var(--text-color); /* Use main text color */
}

.setting input[type="range"] {
    flex-grow: 1;
    cursor: pointer;
    /* Optional: Style range track/thumb for dark mode if needed */
}

.setting span {
    min-width: 70px;
    text-align: right;
    font-family: monospace;
    color: var(--slider-value-color); /* Use variable */
}

/* Text Input Styles */
#text-input {
    width: 95%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid var(--input-border-color); /* Use variable */
    border-radius: 4px;
    font-size: 1em;
    font-family: inherit;
    box-sizing: border-box;
    display: block;
    margin-left: auto;
    margin-right: auto;
    background-color: var(--input-bg-color); /* Use variable */
    color: var(--input-text-color); /* Use variable */
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

.play-button {
    padding: 10px 20px;
    font-size: 1.1em;
    font-weight: bold;
    cursor: pointer;
    border: none;
    background-color: var(--play-button-bg-color); /* Use variable */
    color: var(--play-button-text-color); /* Use variable */
    border-radius: 5px;
    transition: background-color 0.2s ease;
    display: block;
    width: fit-content;
    margin: 0 auto;
}

.play-button:hover {
    background-color: var(--play-button-hover-bg-color); /* Use variable */
}

.play-button:disabled {
    background-color: var(--play-button-disabled-bg-color); /* Use variable */
    cursor: not-allowed;
}

/* Button Container */
.button-container h2 {
    width: 100%;
    text-align: center;
    margin-bottom: 15px;
}

.morse-button {
    padding: 10px 15px;
    font-size: 1.2em;
    font-weight: bold;
    min-width: 50px;
    cursor: pointer;
    border: 1px solid var(--button-border-color); /* Use variable */
    background-color: var(--button-bg-color); /* Use variable */
    color: var(--button-text-color); /* Use variable */
    border-radius: 5px;
    transition: background-color 0.2s ease, transform 0.1s ease, color 0.3s ease, border-color 0.3s ease;
    text-align: center;
}

.morse-button:hover {
    background-color: var(--button-hover-bg-color); /* Use variable */
}

.morse-button:active {
    background-color: var(--button-active-bg-color); /* Use variable */
    transform: scale(0.95);
}


/* ++ Dark Mode Toggle Switch Styles ++ */
.theme-switch-wrapper {
    display: flex;
    align-items: center;
    gap: 8px; /* Space between switch and label */
}

.theme-switch-wrapper em {
    margin-left: 0; /* Reset margin if any */
    font-size: 0.9em;
    color: var(--secondary-text-color); /* Use variable */
}

.theme-switch {
    position: relative;
    display: inline-block;
    width: 50px; /* Width of the switch */
    height: 24px; /* Height of the switch */
}

/* Hide default HTML checkbox */
.theme-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--toggle-bg-color); /* Use variable */
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 18px; /* Height of the knob */
    width: 18px; /* Width of the knob */
    left: 3px; /* Position from left */
    bottom: 3px; /* Position from bottom */
    background-color: var(--toggle-slider-color); /* Use variable */
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked + .slider {
    background-color: var(--toggle-checked-bg-color); /* Use variable */
}

input:focus + .slider {
    box-shadow: 0 0 1px var(--toggle-checked-bg-color); /* Add focus outline */
}

input:checked + .slider:before {
    -webkit-transform: translateX(26px); /* Move knob to the right */
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 24px; /* Make the track rounded */
}

.slider.round:before {
    border-radius: 50%; /* Make the knob round */
}
/* ++ End Dark Mode Toggle Styles ++ */